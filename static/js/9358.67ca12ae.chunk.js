"use strict";(self.webpackChunkn2_utility=self.webpackChunkn2_utility||[]).push([[9358],{9358:(e,t,i)=>{i.r(t),i.d(t,{default:()=>y});var r=i(35143),a=i(50076),s=i(46053),l=(i(81806),i(76460),i(47249),i(85842)),n=i(2190),p=i(68649);let o=class extends((0,p.A)(n.A)){constructor(){super(...arguments),this.type="ogc-feature-3d"}initialize(){this.layer.serviceSupportsSpatialReference(this.view.spatialReference)||this.addResolvingPromise(Promise.reject(new a.A("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:this.layer})))}};(0,r._)([(0,s.MZ)()],o.prototype,"layer",void 0),o=(0,r._)([(0,l.$)("esri.views.3d.layers.OGCFeatureLayerView3D")],o);const y=o},68649:(e,t,i)=>{i.d(t,{A:()=>l});var r=i(35143),a=i(46053),s=(i(81806),i(76460),i(47249),i(85842));const l=e=>{let t=class extends e{get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return(0,r._)([(0,a.MZ)()],t.prototype,"layer",void 0),(0,r._)([(0,a.MZ)({readOnly:!0})],t.prototype,"availableFields",null),t=(0,r._)([(0,s.$)("esri.views.layers.OGCFeatureLayerView")],t),t}}}]);
//# sourceMappingURL=9358.67ca12ae.chunk.js.map